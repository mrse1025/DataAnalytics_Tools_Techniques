ggplot(myset, aes(carat, price, color=as.factor(clarity))+
geom_point(color="white", shape=21, size=4,
aes(fill=as.character(clarity)))+
labs(x= "Diamond Carats", y= "Diamond Price",
title= "Scatterplot of Diamond Prices")+
scale_y_continuous(labels = scales::dollar_format(prefix = "$"))
ggplot(myset, aes(carat, price, color=as.factor(clarity))+
geom_point(color="white",
aes(fill=as.character(clarity)))+
labs(x= "Diamond Carats", y= "Diamond Price",
title= "Scatterplot of Diamond Prices")+
scale_y_continuous(labels = scales::dollar_format(prefix = "$"))
ggplot(myset, aes(carat, price, color=as.factor(clarity))+
geom_point(aes(fill=as.character(clarity)))+
labs(x= "Diamond Carats", y= "Diamond Price",
title= "Scatterplot of Diamond Prices")+
scale_y_continuous(labels = scales::dollar_format(prefix = "$"))
ggplot(myset, aes(carat, price, color=as.factor(clarity)))+
geom_point(aes(fill=as.character(clarity)))+
labs(x= "Diamond Carats", y= "Diamond Price",
title= "Scatterplot of Diamond Prices")+
scale_y_continuous(labels = scales::dollar_format(prefix = "$"))
ggplot(myset, aes(carat, price, color="white")+
geom_point(aes(fill=as.character(clarity)))+
labs(x= "Diamond Carats", y= "Diamond Price",
title= "Scatterplot of Diamond Prices")+
scale_y_continuous(labels = scales::dollar_format(prefix = "$"))
ggplot(myset, aes(carat, price, color=as.factor(clarity)))+
geom_point(aes(fill="white"))+
labs(x= "Diamond Carats", y= "Diamond Price",
title= "Scatterplot of Diamond Prices")+
scale_y_continuous(labels = scales::dollar_format(prefix = "$"))
ggplot(myset, aes(carat, price, color=as.factor(clarity), fill="white"))+
geom_point()+
labs(x= "Diamond Carats", y= "Diamond Price",
title= "Scatterplot of Diamond Prices")+
scale_y_continuous(labels = scales::dollar_format(prefix = "$"))
ggplot(myset, aes(carat, price, color=as.factor(clarity)))+
geom_point()+
labs(x= "Diamond Carats", y= "Diamond Price",
title= "Scatterplot of Diamond Prices")+
scale_y_continuous(labels = scales::dollar_format(prefix = "$"))
ggplot(myset, aes(carat, price, color=as.factor(clarity)))+
geom_point(aes(fill=r,
color="black",
shape=21,
size= 2))+
labs(x= "Diamond Carats", y= "Diamond Price",
title= "Scatterplot of Diamond Prices")+
scale_y_continuous(labels = scales::dollar_format(prefix = "$"))
ggplot(myset, aes(carat, price, color=as.factor(clarity)))+
geom_point(aes(
color="black",
shape=21,
size= 2))+
labs(x= "Diamond Carats", y= "Diamond Price",
title= "Scatterplot of Diamond Prices")+
scale_y_continuous(labels = scales::dollar_format(prefix = "$"))
ggplot(myset, aes(carat, price, color=as.factor(clarity), shape=21))+
geom_point(aes( color="black",
size= 2))+
labs(x= "Diamond Carats", y= "Diamond Price",
title= "Scatterplot of Diamond Prices")+
scale_y_continuous(labels = scales::dollar_format(prefix = "$"))
ggplot(myset, aes(carat, price, color=as.factor(clarity), shape=21))+
geom_point(aes( color="black"))+
labs(x= "Diamond Carats", y= "Diamond Price",
title= "Scatterplot of Diamond Prices")+
scale_y_continuous(labels = scales::dollar_format(prefix = "$"))
ggplot(myset, aes(carat, price, color=as.factor(clarity), shape=21))+
geom_point()+
labs(x= "Diamond Carats", y= "Diamond Price",
title= "Scatterplot of Diamond Prices")+
scale_y_continuous(labels = scales::dollar_format(prefix = "$"))
ggplot(myset, aes(carat, price, color=as.factor(clarity)))+
geom_point(aes(alpha=0.3, shape=21, size=2))+
labs(x= "Diamond Carats", y= "Diamond Price",
title= "Scatterplot of Diamond Prices")+
scale_y_continuous(labels = scales::dollar_format(prefix = "$"))
ggplot(myset, aes(carat, price))+
geom_point(aes(alpha=0.3, shape=21, size=2))+
labs(x= "Diamond Carats", y= "Diamond Price",
title= "Scatterplot of Diamond Prices")+
scale_y_continuous(labels = scales::dollar_format(prefix = "$"))
ggplot(myset, aes(carat, price))+
geom_point(aes(fill=as.character(clarity), alpha=0.3, shape=21, size=2))+
labs(x= "Diamond Carats", y= "Diamond Price",
title= "Scatterplot of Diamond Prices")+
scale_y_continuous(labels = scales::dollar_format(prefix = "$"))
ggplot(myset, aes(carat, price, color=as.factor(clarity)))+
geom_point(aes(fill=as.character(clarity), alpha=0.3, shape=21, size=2))+
labs(x= "Diamond Carats", y= "Diamond Price",
title= "Scatterplot of Diamond Prices")+
scale_y_continuous(labels = scales::dollar_format(prefix = "$"))
ggplot(myset, aes(carat, price, color=as.factor(clarity)))+
geom_point(aes() alpha=0.3, shape=21, size=2))+
ggplot(myset, aes(carat, price, clarity=as.factor(clarity)))+
geom_point(aes(fill=clarity, alpha=0.3, shape=21, size=2))+
labs(x= "Diamond Carats", y= "Diamond Price",
title= "Scatterplot of Diamond Prices")+
scale_y_continuous(labels = scales::dollar_format(prefix = "$"))
ggplot(myset, aes(carat, price, clarity=as.factor(clarity)))+
geom_point(aes(color=clarity, alpha=0.3, shape=21, size=2))+
labs(x= "Diamond Carats", y= "Diamond Price",
title= "Scatterplot of Diamond Prices")+
scale_y_continuous(labels = scales::dollar_format(prefix = "$"))
ggplot(myset, aes(carat, price))+
geom_point( size=2)+
labs(x= "Diamond Carats", y= "Diamond Price",
title= "Scatterplot of Diamond Prices")+
scale_y_continuous(labels = scales::dollar_format(prefix = "$"))
ggplot(myset, aes(carat, price))+
geom_point( size=2, shape=21)+
labs(x= "Diamond Carats", y= "Diamond Price",
title= "Scatterplot of Diamond Prices")+
scale_y_continuous(labels = scales::dollar_format(prefix = "$"))
ggplot(myset, aes(carat, price))+
geom_point( size=2, shape=21, color=clarity)+
labs(x= "Diamond Carats", y= "Diamond Price",
title= "Scatterplot of Diamond Prices")+
scale_y_continuous(labels = scales::dollar_format(prefix = "$"))
ggplot(myset, aes(carat, price))+
geom_point( size=2, shape=21)+
labs(x= "Diamond Carats", y= "Diamond Price",
title= "Scatterplot of Diamond Prices")+
scale_y_continuous(labels = scales::dollar_format(prefix = "$"))
ggplot(myset, aes(carat, price))+
geom_point( size=2, shape=21)+
geom_point(col=as.factor(clarity))+
labs(x= "Diamond Carats", y= "Diamond Price",
title= "Scatterplot of Diamond Prices")+
scale_y_continuous(labels = scales::dollar_format(prefix = "$"))
ggplot(myset, aes(carat, price, col=as.factor(clarity)))+
geom_point( size=2, shape=21)+
labs(x= "Diamond Carats", y= "Diamond Price",
title= "Scatterplot of Diamond Prices")+
scale_y_continuous(labels = scales::dollar_format(prefix = "$"))
ggplot(myset, aes(carat, price, col=as.factor(clarity)))+
geom_point( size=2, shape=21, alpha=0.3)+
labs(x= "Diamond Carats", y= "Diamond Price",
title= "Scatterplot of Diamond Prices")+
scale_y_continuous(labels = scales::dollar_format(prefix = "$"))
ggplot(myset, aes(carat, price, col=as.factor(clarity)))+
geom_point( fill=clarity, size=2, shape=21, alpha=0.3)+
labs(x= "Diamond Carats", y= "Diamond Price",
title= "Scatterplot of Diamond Prices")+
scale_y_continuous(labels = scales::dollar_format(prefix = "$"))
ggplot(myset, aes(carat, price, col=as.factor(clarity)))+
geom_point(size=2, shape=21, alpha=0.3)+
labs(x= "Diamond Carats", y= "Diamond Price",
title= "Scatterplot of Diamond Prices")+
scale_y_continuous(labels = scales::dollar_format(prefix = "$"))
ggplot(myset, aes(carat, price, col=as.factor(clarity)))+
geom_point(size=2, shape=21)+
labs(x= "Diamond Carats", y= "Diamond Price",
title= "Scatterplot of Diamond Prices")+
scale_y_continuous(labels = scales::dollar_format(prefix = "$"))
ggplot(myset, aes(carat, price, fill=as.factor(clarity)))+
geom_point(size=2, shape=21)+
labs(x= "Diamond Carats", y= "Diamond Price",
title= "Scatterplot of Diamond Prices")+
scale_y_continuous(labels = scales::dollar_format(prefix = "$"))
ggplot(myset, aes(carat, price, fill=as.factor(clarity)))+
geom_point(size=2, shape=21, alpha=0.3)+
labs(x= "Diamond Carats", y= "Diamond Price",
title= "Scatterplot of Diamond Prices")+
scale_y_continuous(labels = scales::dollar_format(prefix = "$"))
install.packages("ggThemeAssist")
library(ggThemeAssist)
install.packages("ggThemeAssist")
library(ggThemeAssist)
library(ggThemeAssist)
library(ggThemeAssist)
install.packages("ggThemeAssist")
install.packages("ggThemeAssist")
library(ggThemeAssist)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
install.packeages("ggThemesassist")
install.packeages("ggThemeAssist")
install.packeages("ggThemeassist")
install.package("ggThemeassist")
install.package("ggThemeAssist")
install.packages("ggThemeAssist")
library(ggThemeAssist)
knitr::opts_chunk$set(echo = TRUE)
setwd("~/Desktop/STAT_6443")
library(DescTools); library(MASS); library(car)
bweight=read.csv("birthweight.csv", header=TRUE)
bweight$Black=as.factor(bweight$Black)
bweight$Married=as.factor(bweight$Married)
bweight$Boy=as.factor(bweight$Boy)
bweight$MomSmoke=as.factor(bweight$MomSmoke)
bweight$Ed=as.factor(bweight$Ed)
str(bweight)
setwd("~/Desktop/STAT_6443")
library(DescTools); library(MASS); library(car)
bweight=read.csv("birthweight.csv", header=TRUE)
bweight$Black=as.factor(bweight$Black)
bweight$Married=as.factor(bweight$Married)
bweight$Boy=as.factor(bweight$Boy)
bweight$MomSmoke=as.factor(bweight$MomSmoke)
bweight$Ed=as.factor(bweight$Ed)
str(bweight)
boxplot(bweight$Weight)
qqnorm(bweight$Weight)
qqline(bweight$Weight, col="red")
shapiro.test(bweight$Weight)
boxplot(Weight~MomSmoke, data=bweight, main= "Birthweight by Moms who smoke", xlab="Mom Smoke", ylab="Weight")
shapiro.test(bweight[bweight$MomSmoke=='0', "Weight"])
shapiro.test(bweight[bweight$MomSmoke=='1', "Weight"])
t.test(bweight$Weight~bweight$MomSmoke)
bw.aov<- aov(Weight~MomSmoke, data=bweight)
summary(bw.aov)
leveneTest(Weight~MomSmoke, data=bweight)
TukeyHSD(bw.aov)
full= aov(Weight ~ black + Married, Boy, MomSmoke, Ed, data=bweight)
full= aov(Weight ~ black + Married +Boy+ MomSmoke+ Ed, data=bweight)
full= aov(Weight ~ Black + Married +Boy+ MomSmoke+ Ed, data=bweight)
full= aov(Weight ~ Black + Married +Boy+ MomSmoke+ Ed, data=bweight)
full= aov(Weight ~ Black + Married +Boy+ MomSmoke+ Ed, data=bweight)
summary(full)
back1= aov(Weight ~ Black + Boy+ MomSmoke+ Ed, data=bweight)
summary(full)
full= aov(Weight ~ Black + Married +Boy+ MomSmoke, data=bweight)
summary(full)
full= aov(Weight ~ Black + Married + MomSmoke, data=bweight)
summary(full)
full= aov(Weight ~ Black + Married +Boy+ MomSmoke+ Ed, data=bweight)
summary(full)
back1= aov(Weight ~ Black + Boy+ MomSmoke+ Ed, data=bweight)
summary(full)
back2= aov(Weight ~ Black + Married +Boy+ MomSmoke, data=bweight)
summary(full)
back3= aov(Weight ~ Black + Married + MomSmoke, data=bweight)
summary(full)
full= aov(Weight ~ Black + Married +Boy+ MomSmoke+ Ed, data=bweight)
summary(full)
back1= aov(Weight ~ Black + Boy+ MomSmoke+ Ed, data=bweight)
summary(back1)
back2= aov(Weight ~ Black + Married +Boy+ MomSmoke, data=bweight)
summary(back2)
back3= aov(Weight ~ Black + Married + MomSmoke, data=bweight)
summary(back3)
back4= aov(Weight ~ Black +  MomSmoke, data=bweight)
summary(back4)
back1= aov(Weight ~ Black + Married+ Boy+ MomSmoke, data=bweight)
summary(back1)
back2= aov(Weight ~ Black + Married + MomSmoke, data=bweight)
summary(back2)
back3= aov(Weight ~ Black +  MomSmoke, data=bweight)
summary(back3)
back3= aov(Weight ~ Black +  MomSmoke, data=bweight)
back2= aov(Weight ~ Black + Married + MomSmoke, data=bweight)
back1= aov(Weight ~ Black + Married+ Boy+ MomSmoke, data=bweight)
full= aov(Weight ~ Black + Married +Boy+ MomSmoke+ Ed, data=bweight)
final= aov(Weight ~ Black + MomSmoke + Black * MomSmoke, data=bweight)
summary (final)
full= aov(Weight ~ Black + Married +Boy+ MomSmoke+ Ed, data=bweight, type=3)
full= aov(Weight ~ Black + Married +Boy+ MomSmoke+ Ed, data=bweight)
summary(full, type=3)
back1= aov(Weight ~ Black + Married+ Boy+ MomSmoke, data=bweight)
summary(back1, type=3)
back2= aov(Weight ~ Black + Married + MomSmoke, data=bweight)
summary(back2, type=3)
back3= aov(Weight ~ Black +  MomSmoke, data=bweight)
summary(back3, type=3)
back3= aov(Weight ~ Black +  MomSmoke, data=bweight)
#summary(back3, type=3)
back2= aov(Weight ~ Black + Married + MomSmoke, data=bweight)
#summary(back2, type=3)
back1= aov(Weight ~ Black + Married+ Boy+ MomSmoke, data=bweight)
#summary(back1, type=3)
full= aov(Weight ~ Black + Married +Boy+ MomSmoke+ Ed, data=bweight)
#summary(full, type=3)
summary (final, type=3)
final= aov(Weight ~ Black + MomSmoke + Black * MomSmoke, data=bweight)
#summary (final, type=3)
qqplot(back3, 2)
qqplot(back3)
qqplot(bweight~back3)
plot(back3)
plot(back3,2)
var.test(Weight, Black + MomSmoke, data=bweight)
var.test(Weight~ Black + MomSmoke, data=bweight)
var.test(Weight~ Black , MomSmoke, data=bweight)
ScheffeTest(back3)
lm(back3)
effectsize= rsquare(back3, data=bweight)
setwd("~/Desktop/STAT_6443")
library(DescTools); library(MASS); library(car); library(modelr)
bweight=read.csv("birthweight.csv", header=TRUE)
bweight$Black=as.factor(bweight$Black)
bweight$Married=as.factor(bweight$Married)
bweight$Boy=as.factor(bweight$Boy)
bweight$MomSmoke=as.factor(bweight$MomSmoke)
bweight$Ed=as.factor(bweight$Ed)
str(bweight)
setwd("~/Desktop/STAT_6443")
library(DescTools); library(MASS); library(car); library(modelr)
bweight=read.csv("birthweight.csv", header=TRUE)
bweight$Black=as.factor(bweight$Black)
bweight$Married=as.factor(bweight$Married)
bweight$Boy=as.factor(bweight$Boy)
bweight$MomSmoke=as.factor(bweight$MomSmoke)
bweight$Ed=as.factor(bweight$Ed)
str(bweight)
boxplot(bweight$Weight)
qqnorm(bweight$Weight)
qqline(bweight$Weight, col="red")
shapiro.test(bweight$Weight)
boxplot(Weight~MomSmoke, data=bweight, main= "Birthweight by Moms who smoke", xlab="Mom Smoke", ylab="Weight")
shapiro.test(bweight[bweight$MomSmoke=='0', "Weight"])
shapiro.test(bweight[bweight$MomSmoke=='1', "Weight"])
t.test(bweight$Weight~bweight$MomSmoke)
bw.aov<- aov(Weight~MomSmoke, data=bweight)
summary(bw.aov)
leveneTest(Weight~MomSmoke, data=bweight)
TukeyHSD(bw.aov)
full= aov(Weight ~ Black + Married +Boy+ MomSmoke+ Ed, data=bweight)
#summary(full, type=3)
back1= aov(Weight ~ Black + Married+ Boy+ MomSmoke, data=bweight)
#summary(back1, type=3)
back2= aov(Weight ~ Black + Married + MomSmoke, data=bweight)
#summary(back2, type=3)
back3= aov(Weight ~ Black +  MomSmoke, data=bweight)
#summary(back3, type=3)
final= aov(Weight ~ Black + MomSmoke + Black * MomSmoke, data=bweight)
#summary (final, type=3)
plot(back3,2)
lm(back3)
effectsize= rsquare(back3, data=bweight)
ScheffeTest(back3)
final= aov(Weight ~ Black + MomSmoke + Black * MomSmoke, data=bweight)
summary (final, type=3)
variance= var(back3)
variance= var.test(back3)
final= aov(Weight ~ Black + MomSmoke + Black * MomSmoke, data=bweight)
summary (final, type=3)
plot(back3)
plot(back3,2)
lm(Weight~ Black + MomSmoke, data=bweight)
#effectsize= rsquare(back3, data=bweight)
linearmodel <- lm(Weight~ Black + MomSmoke, data=bweight)
#effectsize= rsquare(back3, data=bweight)
summary(linearmodel)
setwd("~/Desktop/STAT_6443")
library(DescTools); library(MASS); library(car)
bweight=read.csv("birthweight.csv", header=TRUE)
bweight$Black=as.factor(bweight$Black)
bweight$Married=as.factor(bweight$Married)
bweight$Boy=as.factor(bweight$Boy)
bweight$MomSmoke=as.factor(bweight$MomSmoke)
bweight$Ed=as.factor(bweight$Ed)
str(bweight)
setwd("~/Desktop/STAT_6443")
library(DescTools); library(MASS); library(car)
bweight=read.csv("birthweight.csv", header=TRUE)
bweight$Black=as.factor(bweight$Black)
bweight$Married=as.factor(bweight$Married)
bweight$Boy=as.factor(bweight$Boy)
bweight$MomSmoke=as.factor(bweight$MomSmoke)
bweight$Ed=as.factor(bweight$Ed)
str(bweight)
boxplot(bweight$Weight)
qqnorm(bweight$Weight)
qqline(bweight$Weight, col="red")
shapiro.test(bweight$Weight)
boxplot(Weight~MomSmoke, data=bweight, main= "Birthweight by Moms who smoke", xlab="Mom Smoke", ylab="Weight")
shapiro.test(bweight[bweight$MomSmoke=='0', "Weight"])
shapiro.test(bweight[bweight$MomSmoke=='1', "Weight"])
t.test(bweight$Weight~bweight$MomSmoke)
bw.aov<- aov(Weight~MomSmoke, data=bweight)
summary(bw.aov)
leveneTest(Weight~MomSmoke, data=bweight)
TukeyHSD(bw.aov)
full= aov(Weight ~ Black + Married +Boy+ MomSmoke+ Ed, data=bweight)
#summary(full, type=3)
back1= aov(Weight ~ Black + Married+ Boy+ MomSmoke, data=bweight)
#summary(back1, type=3)
back2= aov(Weight ~ Black + Married + MomSmoke, data=bweight)
#summary(back2, type=3)
back3= aov(Weight ~ Black +  MomSmoke, data=bweight)
#summary(back3, type=3)
finalw= aov(Weight ~ Black + MomSmoke + Black * MomSmoke, data=bweight)
summary (final, type=3)
plot(back3,2)
linearmodel <- lm(Weight~ Black + MomSmoke, data=bweight)
summary(linearmodel)
ScheffeTest(back3)
final= aov(Weight ~ Black + MomSmoke + Black * MomSmoke, data=bweight)
summary (final, type=3)
final_with_interaction= aov(Weight ~ Black + MomSmoke + Black * MomSmoke, data=bweight)
summary (final_with_interaction, type=3)
plot(back3,2, col="red")
install.packages(c("plotly", "highcharter", "xaringan", "xaringanthemer"))
install.packages(c("plotly", "highcharter", "xaringan", "xaringanthemer"))
setwd("c/desktop/data_viz")
setwd("c/desktop/Data_Viz")
knitr::kable(summary(cars))
plot(cars)
knitr::include_app('https://shiny.rstudio.com/gallery/movie-explorer.html', height = '800px')
install.packages(flexdashboard)
install.packages("flexdashboard")
install.packages(c("backports", "broom", "callr", "car", "cli", "clipr", "colorspace", "cpp11", "data.table", "dbplyr", "DescTools", "digest", "e1071", "Exact", "generics", "gganimate", "ggplot2", "glue", "here", "htmlwidgets", "isoband", "janitor", "jsonlite", "labeling", "lme4", "lubridate", "magrittr", "matrixStats", "openssl", "openxlsx", "pbkrtest", "pillar", "pkgbuild", "plotly", "processx", "ps", "quantmod", "quantreg", "R6", "RcppArmadillo", "RcppEigen", "readr", "rlang", "rmarkdown", "rprojroot", "rstudioapi", "servr", "showtext", "sp", "statmod", "stringi", "sysfonts", "testthat", "tibble", "tinytex", "vctrs", "withr", "xaringan", "xfun"))
plot(cars)
plot(cars)
plot(cars)
plot(cars)
install.packages(c("BH", "brio", "cpp11", "crosstalk", "DBI", "diffobj", "dplyr", "expm", "fansi", "ggthemes", "hexbin", "hms", "htmltools", "httpuv", "plotly", "quantreg", "Rcpp", "RcppArmadillo", "showtext", "sp", "sysfonts", "tibble", "tinytex", "withr", "xfun"))
#8
8<-1
#8
your_num<-8
your_num<-8
set.seed(134)
s<-sample(1:41, 41, replace=F)
teams<-as.data.frame(s)
teams$rownum<-as.numeric(rownames(teams))
teams$GroupNum<-ifelse(teams$rownum<=4, 1, ifelse(teams$rownum<=8 & teams$rownum>4, 2,
ifelse(teams$rownum<=12 & teams$rownum>8, 3, ifelse(teams$rownum<=16 & teams$rownum>12, 4,
ifelse(teams$rownum<=20 & teams$rownum>16, 5, ifelse(teams$rownum<=24 & teams$rownum>20, 6,
ifelse(teams$rownum<=28 & teams$rownum>24, 7, ifelse(teams$rownum<=32 & teams$rownum>28, 8,
ifelse(teams$rownum<=36 & teams$rownum>32, 9, 10)))))))))
#Merge with Student abc123 Data
teams<-merge(teams, stu, by.x="s", by.y="V1")
#Find Your Teammates
your_group<-subset(teams, teams$s==your_num)
your_group<-as.numeric(your_group[3])
team_sub<-subset(teams, teams$GroupNum==your_group) #Creating Subset of just your teammates
team_sub<-subset(team_sub, team_sub$s!=your_num)
for(i in 1:nrow(team_sub)){
print(paste0("Your group number is ", your_group," and your teammates' e-mails are ",
team_sub[i,4], "@my.utsa.edu"))
}
stu<-read.csv("https://raw.githubusercontent.com/mattdemography/DA_6223_Spring2021/main/Data/abc123_list.csv", header=F, fileEncoding="UTF-8-BOM")
#8
your_num<-8
set.seed(134)
s<-sample(1:41, 41, replace=F)
teams<-as.data.frame(s)
teams$rownum<-as.numeric(rownames(teams))
teams$GroupNum<-ifelse(teams$rownum<=4, 1, ifelse(teams$rownum<=8 & teams$rownum>4, 2,
ifelse(teams$rownum<=12 & teams$rownum>8, 3, ifelse(teams$rownum<=16 & teams$rownum>12, 4,
ifelse(teams$rownum<=20 & teams$rownum>16, 5, ifelse(teams$rownum<=24 & teams$rownum>20, 6,
ifelse(teams$rownum<=28 & teams$rownum>24, 7, ifelse(teams$rownum<=32 & teams$rownum>28, 8,
ifelse(teams$rownum<=36 & teams$rownum>32, 9, 10)))))))))
#Merge with Student abc123 Data
teams<-merge(teams, stu, by.x="s", by.y="V1")
#Find Your Teammates
your_group<-subset(teams, teams$s==your_num)
your_group<-as.numeric(your_group[3])
team_sub<-subset(teams, teams$GroupNum==your_group) #Creating Subset of just your teammates
team_sub<-subset(team_sub, team_sub$s!=your_num)
for(i in 1:nrow(team_sub)){
print(paste0("Your group number is ", your_group," and your teammates' e-mails are ",
team_sub[i,4], "@my.utsa.edu"))
}
library(tm)
library(tm)
library(pdftools)
library(stringr)
library(plyr)
t1 <- pdf_text('https://www.avon-schools.org/cms/lib/IN01001885/Centricity/Domain/3490/AP%20Calculus%20AB%20-%20Semester%201%20Review%20-%20Packet%201.pdf')
t2 <- pdf_text('http://crunchymath.weebly.com/uploads/8/2/4/0/8240213/1st_semester_final_exam_practice_test.pdf')
t3 <- pdf_text('https://www.vonsteuben.org/ourpages/auto/2014/1/7/44499475/semester%20one%20exam%20review.pdf')
t1 <- strsplit(t1, '\n')
View(t1)
View(t1)
rv1 <- Corpus(VectorSource(t1$content))
View(rv1)
View(t1)
View(rv1)
rv2 <- Corpus(VectorSource(t2$content))
t1 <- pdf_text('https://www.avon-schools.org/cms/lib/IN01001885/Centricity/Domain/3490/AP%20Calculus%20AB%20-%20Semester%201%20Review%20-%20Packet%201.pdf')
t2 <- pdf_text('http://crunchymath.weebly.com/uploads/8/2/4/0/8240213/1st_semester_final_exam_practice_test.pdf')
t3 <- pdf_text('https://www.vonsteuben.org/ourpages/auto/2014/1/7/44499475/semester%20one%20exam%20review.pdf')
rv2 <- Corpus(VectorSource(t2$content))
r2 <- strsplit(t1, "\n")
View(r2)
setwd("~/Desktop/DataAnalytics/Semester2/DataAnalytics_Tools_Techniques")
test <- pdf_text("teacher1a.pdf")
testDF <- strsplit(test, "\n")
View(testDF)
test <- pdf_text("Chapter 1(2) (2).pdf")
testDF <- strsplit(test, "\n")
test <- pdf_text("teacher4_2017.pdf")
testDF <- strsplit(test, "\n")
test1 <- pdf_text("teacher5_unknown.pdf")
testDF1 <- strsplit(test, "\n")
test1 <- pdf_text("teacher5_unknown.pdf")
testDF1 <- strsplit(test1, "\n")
test2 <- pdf_text("teacher6.pdf")
testDF2 <- strsplit(test2, "\n")
test1 <- pdf_text("teacher4_2017.pdf")
testDF1 <- strsplit(test1, "\n")
test2 <- pdf_text("teacher5_unknown.pdf")
testDF2 <- strsplit(test2, "\n")
test3 <- pdf_text("teacher6.pdf")
testDF3 <- strsplit(test3, "\n")
View(testDF1)
corp1 <- Corpus(URISource(test1), readerControl= test1(reader=readPDF))
corp1 <- Corpus(URISource(testDF1), readerControl= test1(reader=readPDF))
testDF
rm_number
rm_number?
?rm_number?
library(tm)
install.packages("qdapRegex")
library(qdapRegex)
no_num1 <- removeNumbers(test1)
no_num1 <- removeNumbers(testDF1)
